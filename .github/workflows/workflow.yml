name: Workflow

on:
  push:
    paths-ignore:
    - 'package.json'

jobs:
  version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: paulhatch/semantic-version@v4.0.2
      id: semver
      with:
        bump_each_commit: true
  build:
    name: Build with Jekyll
    needs: version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
        restore-keys: |
          ${{ runner.os }}-gems- 
    - name: Build with Jekyll
      id: commit
      run: |
        echo "::set-output name=version::${{ needs.version.outputs.version }}"
        if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then echo "::set-output name=stage::prod"; else echo "::set-output name=stage::dev"; fi
        echo "VERSION=${{ needs.version.outputs.version }}" >> $GITHUB_ENV
        bundle install
        github-pages build --verbose --source ./ --destination ./_site
    # - name: Build with Jekyll
    #   uses: actions/jekyll-build-pages@v1
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v0
    - name: Check version
      run: |
        echo ${{ env.VERSION }}
  report:
    name: Report Build Status
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v1
      with:
        emit_telemetry: true
  publish:
    name: Publish to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1
  tag-version:
    name: Release version
    needs: [ version, publish ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "16.x"
    - name: Tag version in repository
      run: |
        git config user.email "ci@hoonio.com"
        git config user.name "Hoonio"
        npm version ${{ needs.version.outputs.version }}
        git tag -a ${{ needs.version.outputs.version }} -m "${{ github.event.head_commit.message }}"
        git push origin ${{ needs.version.outputs.version }}